# This workflow is used to build the docker image for the paig-oss project
name: paig-oss-docker-build

on:
  workflow_run:
    workflows: paig-server-ci
    types:
      - completed

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set short SHA
        id: short_sha
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Download workflow artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            // Create artifacts directory
            await exec.exec('mkdir', ['-p', 'artifacts']);
            
            for (const artifact of artifacts.data.artifacts) {
              console.log(`Downloading artifact: ${artifact.name}`);
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
                archive_format: 'zip'
              });
              
              require('fs').writeFileSync(`${artifact.name}.zip`, Buffer.from(download.data));
              await exec.exec('mkdir', ['-p', `artifacts/${artifact.name}`]);
              await exec.exec('unzip', [`${artifact.name}.zip`, '-d', `artifacts/${artifact.name}`]);
            }
            
            // List all wheel files
            await exec.exec('find', ['artifacts', '-name', '*.whl']);

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          file: docker/Dockerfile
          push: true
          build-args: |
            USE_LOCAL_WHEEL=true
          tags: |
            ${{ vars.DOCKER_HUB}}/${{ vars.DOCKER_IMAGE_NAME }}:latest
            ${{ vars.DOCKER_HUB}}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.event.workflow_run.head_branch }}-${{ steps.short_sha.outputs.SHORT_SHA }}
          labels: |
            maintainer=privacera
            org.opencontainers.image.vendor=Privacera
